import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

// ‡πÇ‡∏´‡∏•‡∏î environment variables
dotenv.config();

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_KEY;

if (!supabaseUrl || !supabaseKey) {
    console.error('‚ùå Missing Supabase configuration');
    process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function checkRental94() {
    console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• rental ID 94...\n');

    try {
        // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• rental ID 94
        const { data: rental, error } = await supabase
            .from('rentals')
            .select('*')
            .eq('id', 94)
            .single();

        if (error) {
            console.error('‚ùå Error fetching rental:', error);
            return;
        }

        if (!rental) {
            console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö rental ID 94');
            return;
        }

        console.log('‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• rental ID 94:');
        console.log('==========================================');
        console.log(`üìã Rental ID: ${rental.id}`);
        console.log(`üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡πà‡∏≤: ${rental.start_date} ‡∏ñ‡∏∂‡∏á ${rental.end_date}`);
        console.log(`üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${rental.rental_status}`);
        console.log(`üí∞ ‡∏Ñ‡πà‡∏≤‡πÄ‡∏ä‡πà‡∏≤: ${rental.total_amount} ‡∏ö‡∏≤‡∏ó`);
        console.log(`üõ°Ô∏è ‡πÄ‡∏á‡∏¥‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô: ${rental.security_deposit} ‡∏ö‡∏≤‡∏ó`);
        console.log(`‚ö†Ô∏è ‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏•‡πâ‡∏ß: ${rental.late_fee_calculated || 0} ‡∏ö‡∏≤‡∏ó`);
        console.log(`üí∏ ‡πÄ‡∏á‡∏¥‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏Ñ‡∏∑‡∏ô: ${rental.security_deposit_refund_amount || '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì'} ‡∏ö‡∏≤‡∏ó`);
        console.log(`üë§ ‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡πà‡∏≤ ID: ${rental.renter_id}`);
        console.log(`üè™ ‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á ID: ${rental.owner_id}`);
        console.log(`üì¶ ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ID: ${rental.product_id}`);
        
        if (rental.actual_return_time) {
            console.log(`üîÑ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∑‡∏ô‡∏à‡∏£‡∏¥‡∏á: ${rental.actual_return_time}`);
        }
        
        console.log('==========================================\n');

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
        const { data: statusHistory, error: historyError } = await supabase
            .from('rental_status_history')
            .select('*')
            .eq('rental_id', 94)
            .order('created_at', { ascending: false });

        if (historyError) {
            console.error('‚ùå Error fetching status history:', historyError);
        } else {
            console.log('üìú ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:');
            statusHistory.forEach((history, index) => {
                console.log(`${index + 1}. ${history.status} - ${history.created_at}`);
                if (history.notes) {
                    console.log(`   ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ${history.notes}`);
                }
            });
        }

    } catch (error) {
        console.error('‚ùå Unexpected error:', error);
    }
}

checkRental94();